version: '3.3'

services:
  zoo1:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      zk_id: "1"
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2

  kaf1:
    image: confluentinc/cp-kafka
    depends_on:
      - zoo1
    ports:
      - "127.0.0.1:9094:9094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:32181"
      KAFKA_LISTENERS: INTERNAL://kaf1:9092,OUTSIDE://kaf1:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kaf1:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#  db:
#    image: postgres:13-alpine3.14
#    restart: always
#    volumes:
#      - ~/pg_ocp-instruction-api:/var/lib/postgresql/data
#    environment:
#      POSTGRES_PASSWORD: postgres
#      PGDATA: /var/lib/postgresql/data/pgdata
#    ports:
#      - 5432:5432

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    user: root
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  app:
    image: app
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    depends_on:
      - pg_master
      - pg_slave
      - kaf1
      - jaeger
      - prometheus
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: postgres://postgres:postgres@pg_master:5432/instruction?sslmode=disable
    restart: always
    ports:
      - 80:80
      - 8081:8081

  pg_master:
    build:
      context: .
      dockerfile: ./docker/pg_master/Dockerfile
    volumes:
      - pg_data_ms:/var/lib/postgresql/data
      - pg_wal_arch:/mnt/wal_arch
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - PG_REP_USER=replica
      - PG_REP_PASSWORD=supper_replica_passwd_123
    restart: always
    ports:
      - "5432:5432"

  pg_slave:
    depends_on:
      - pg_master
    build:
      context: .
      dockerfile: ./docker/pg_slave/Dockerfile
    volumes:
      - pg_data_sl:/var/lib/postgresql/data
      - pg_wal_arch:/mnt/wal_arch
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - PG_REP_USER=replica
      - PG_REP_PASSWORD=supper_replica_passwd_123
    restart: always
    ports:
      - "5433:5432"

volumes:
  pg_data_ms:
  pg_data_sl:
  pg_wal_arch:
